---
import { navigation } from "../data/navigation"
---

<!-- Header -->
<header class="bg-white shadow-sm">
    <nav class="px-6 py-4">
        <div class="max-w-7xl mx-auto flex items-center justify-between">
            <div class="flex items-center space-x-2">
                <div
                    class="w-8 h-8 flex items-center justify-center bg-primary text-white rounded-full"
                >
                    <i class="ri-sparkling-line text-lg"></i>
                </div>
                <span class="text-2xl font-extrabold text-gray-900"
                    >One Stop Cleaning</span
                >
            </div>
            <div class="hidden md:flex items-center space-x-8">
                {navigation.map(link => {
                    if(link.subLinks && link.subLinks.length > 0) {
                         return (
                            <details class="group [&amp;_summary::-webkit-details-marker]:hidden rounded-lg hover:bg-primary/10 text-gray-700 hover:text-primary! transition-colors relative">
                                <summary class="flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 ">
                                    <span class="flex cursor-pointer items-center justify-between rounded-lg">
                                        <a href={link.link}> {link.name} </a>
                                    </span>
                                    <span class="shrink-0 transition duration-300 group-open:-rotate-180">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                        </svg>
                                    </span>
                                </summary>

                                <div role="menu" class="absolute end-0 top-12 z-20 w-fit divide-y divide-gray-200 overflow-hidden rounded border border-gray-300 bg-white shadow-sm">
                                    <div class="grid grid-cols-[max-content_max-content] gap-4 p-4 w-fit">
                                        {link.subLinks.map(subLink => {
                                            return (
                                                <div class="w-min">
                                                    <a href={subLink.link} class="whitespace-nowrap rounded-lg px-4 py-2 text-sm font-sm text-gray-700 hover:bg-primary/10 hover:text-primary transition-colors">
                                                        {subLink.name}
                                                    </a>
                                                </div>    
                                            )
                                        })}
                                    </div>
                                </div>
                            </details>
                         )
                    }

                    return (
                        <a href={link.link} class="rounded-lg px-4 py-2 text-gray-700 hover:bg-primary/10 hover:text-primary transition-colors"> 
                            {link.name}
                        </a>
                    )
                })}
                <!-- <a
                    href="/"
                    class="text-gray-700 hover:text-primary transition-colors"
                    >Home</a
                >
                <a
                    href="/services"
                    class="text-gray-700 hover:text-primary transition-colors"
                    >Services</a
                >
                <a
                    href="/about"
                    class="text-gray-700 hover:text-primary transition-colors"
                    >About</a
                >
                <a
                    href="/contact"
                    class="text-gray-700 hover:text-primary transition-colors"
                    >Contact</a
                > -->
            </div>
            <div class="flex items-center space-x-4">
                <a href="tel:+1-555-0123" class="text-primary font-semibold"
                    >(555) 123-4567</a
                >
                <a
                    href="/contact" class="bg-primary cursor-pointer text-white px-6 py-2 !rounded-button hover:bg-primary/70 transition-colors whitespace-nowrap"
                >
                    Get Quote
                </a>
            </div>
        </div>
    </nav>
</header>

<nav class="side-menu hidden">
    <ul class="space-y-1">
        {navigation.map(link => {
            if(link.subLinks && link.subLinks?.length > 0) {
                return (
                    <li>
                        <details class="group [&amp;_summary::-webkit-details-marker]:hidden">
                            <summary class="flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700">
                                <span class="flex cursor-pointer items-center justify-between rounded-lg text-gray-500 hover:bg-gray-100 hover:text-gray-700">
                                    <a href={link.link} class="text-sm font-medium"> {link.name} </a>
                                </span>
                                <span class="shrink-0 transition duration-300 group-open:-rotate-180">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                    </svg>
                                </span>
                            </summary>

                            {link.subLinks.map(subLink => {
                                return (
                                    <ul class="mt-2 space-y-1 px-4">
                                        <li>
                                            <a href={subLink.link} class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700">
                                                {subLink.name}
                                            </a>
                                        </li>
                                    </ul>
                                )
                            })}
                        </details>
                    </li>
                )
            }

            return (
                <li>
                    <a href={link.link} class="block rounded-lg px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-700">
                        {link.name}
                    </a>
                </li>
            )
        })}
    </ul>
</nav>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const detailsElements = document.querySelectorAll('header details');

        detailsElements.forEach(details => {
            let isHovering = false;

            const open = () => {
                isHovering = true;
                details.setAttribute('open', '');
            };

            const close = () => {
                isHovering = false;
                setTimeout(() => {
                    if (!isHovering) {
                        details.removeAttribute('open');
                    }
                }, 100);
            };

            details.addEventListener('mouseenter', open);
            details.addEventListener('mouseleave', close);

            // Also handle hover on the dropdown content
            const content = details.querySelector('header div[role="menu"]');
            if (content) {
                content.addEventListener('mouseenter', open);
                //content.addEventListener('mouseleave', close);
            }
        });
    });
</script>

<style>
    details[open] ul, details[open] div {
    animation: animateDown 0.2s linear forwards;
    }

    @keyframes animateDown {
    0% {
        opacity: 0;
        transform: translatey(-15px);
    }
    100% {
        opacity: 1;
        transform: translatey(0);
    }
    }
</style>